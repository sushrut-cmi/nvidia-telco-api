{
  "openapi": "3.0.3",
  "info": {
    "title": "NVIDIA Telco Network Configuration API",
    "version": "1.0.0",
    "description": "OpenAPI 3.0 spec: endpoints for authentication, topology queries, task management and MML execution.\n"
  },
  "servers": [
    {
      "url": "http://{serverIp}:{portAuth}",
      "description": "User-management server (authentication)",
      "variables": {
        "serverIp": {
          "default": "192.168.55.248"
        },
        "portAuth": {
          "default": "9098"
        }
      }
    },
    {
      "url": "http://{serverIp}:{portMgmt}",
      "description": "Management server (topology/tasks/mml)",
      "variables": {
        "serverIp": {
          "default": "192.168.55.248"
        },
        "portMgmt": {
          "default": "9068"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "example": "tcs.team"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Password123"
          },
          "applicationId": {
            "type": "string",
            "example": "someAppId"
          }
        },
        "required": [
          "userName",
          "password"
        ]
      },
      "UserRoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 37942
          },
          "name": {
            "type": "string",
            "example": "RETRIEVE_NETWORK_ELEMENT_LIST"
          },
          "entityStatus": {
            "type": "string",
            "example": "ACTIVE"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-17T09:29:59.000Z"
          }
        }
      },
      "UserGroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 37936
          },
          "name": {
            "type": "string",
            "example": "NVIDIA TCS Team"
          },
          "description": {
            "type": "string",
            "example": "This is a user group for the NVIDIA TCS team to access the APIs."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-17T09:26:22.000Z"
          },
          "userRolesDtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoleDto"
            }
          }
        }
      },
      "UserLoginDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 37938
          },
          "firstName": {
            "type": "string",
            "example": "TCS"
          },
          "lastName": {
            "type": "string",
            "example": "Team"
          },
          "username": {
            "type": "string",
            "example": "tcs.team"
          },
          "email": {
            "type": "string",
            "example": "tcsteam@tcs.com"
          },
          "serviceProviderId": {
            "type": "string",
            "example": "67"
          },
          "locked": {
            "type": "string",
            "example": "N"
          },
          "loginAttempts": {
            "type": "integer",
            "example": 0
          },
          "resetPassword": {
            "type": "string",
            "example": "N"
          },
          "changePassword": {
            "type": "string",
            "example": "N"
          },
          "entityStatus": {
            "type": "string",
            "example": "ACTIVE"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-17T09:27:55.000Z"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-17T10:35:40.000Z"
          },
          "userClassification": {
            "type": "string",
            "example": "EXTERNAL"
          },
          "userGroupDto": {
            "$ref": "#/components/schemas/UserGroupDto"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User account successfully authenticated"
          },
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "authenticated": {
            "type": "boolean",
            "example": true
          },
          "userLoginDto": {
            "$ref": "#/components/schemas/UserLoginDto"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzUxMiJ9â€¦."
          }
        }
      },
      "TopologyRequest": {
        "type": "object",
        "properties": {
          "networkElementIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "NE=1120"
            ]
          }
        },
        "required": [
          "networkElementIds"
        ]
      },
      "CellInfoDto": {
        "type": "object",
        "properties": {
          "cellDistinguishedName": {
            "type": "string",
            "example": "NE=1120,CELL=11_0"
          },
          "cellIdentifier": {
            "type": "integer",
            "example": 11
          },
          "stateValues": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              0,
              2
            ]
          },
          "accessTechnology": {
            "type": "string",
            "example": "LTE(FDD)"
          },
          "cellDisplayName": {
            "type": "string",
            "example": "11"
          },
          "siteDisplayName": {
            "type": "string",
            "example": "HRE5066-RN-OML2A"
          },
          "lockState": {
            "type": "string",
            "example": "Unlocked"
          },
          "administrativeState": {
            "type": "string",
            "example": "Active"
          },
          "operationalState": {
            "type": "string",
            "example": "Enable"
          },
          "healthStatus": {
            "type": "string",
            "example": "Normal"
          },
          "additionalInformation": {
            "type": "string",
            "example": ""
          }
        }
      },
      "TopologyDto": {
        "type": "object",
        "properties": {
          "logicalBaseStationDn": {
            "type": "string",
            "example": "NE=1120,ENODEBFUNCTION=0"
          },
          "networkElementDn": {
            "type": "string",
            "example": "NE=1120"
          },
          "cellObjectId": {
            "type": "integer",
            "example": 1003222020272
          },
          "additionalInfo": {
            "type": "string",
            "example": ""
          },
          "cellInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CellInfoDto"
            }
          }
        }
      },
      "TopologyResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Topology cell information retrieved successfully."
          },
          "topologyDtoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopologyDto"
            }
          }
        }
      },
      "TaskDto": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string",
            "example": "101363"
          },
          "taskName": {
            "type": "string",
            "example": "Test"
          },
          "taskStatus": {
            "type": "string",
            "example": "CREATED"
          },
          "timestamp": {
            "type": "integer",
            "example": 1758115710947
          },
          "progress": {
            "type": "integer",
            "nullable": true,
            "example": 100
          },
          "currentState": {
            "type": "integer",
            "nullable": true,
            "example": 3
          },
          "currentStateDescription": {
            "type": "string",
            "nullable": true,
            "example": "Complete"
          }
        }
      },
      "TaskCreateResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 201
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Task created successfully."
          },
          "taskDto": {
            "$ref": "#/components/schemas/TaskDto"
          }
        }
      },
      "TaskStatusResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Task status retrieved successfully."
          },
          "taskDto": {
            "$ref": "#/components/schemas/TaskDto"
          }
        }
      },
      "DeleteTaskResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Task deleted successfully."
          },
          "taskDto": {
            "$ref": "#/components/schemas/TaskDto"
          }
        }
      },
      "MmlDataDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "UZ College Road_HRE5066"
          },
          "report": {
            "type": "string",
            "example": "+++    UZ College Road_HRE5066 ... (truncated)"
          },
          "result": {
            "type": "string",
            "example": "Operation succeeded."
          },
          "retCode": {
            "type": "integer",
            "example": 0
          },
          "serialId": {
            "type": "integer",
            "example": -1
          }
        }
      },
      "MmlCommandDto": {
        "type": "object",
        "properties": {
          "command": {
            "type": "string",
            "example": "LST CELL:LOCALCELLID=1;"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MmlDataDto"
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MmlDataDto"
            }
          },
          "executionStatus": {
            "type": "string",
            "example": "SUCCESS"
          },
          "timestamp": {
            "type": "integer",
            "example": 1758099705518
          }
        }
      },
      "MmlExecuteRequest": {
        "type": "object",
        "properties": {
          "command": {
            "type": "string",
            "example": "LST CELL:LOCALCELLID=1;"
          },
          "neNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "UZ College Road_HRE5066"
            ]
          }
        },
        "required": [
          "command",
          "neNames"
        ]
      },
      "MmlExecuteResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "MML command executed successfully."
          },
          "mmlCommandDto": {
            "$ref": "#/components/schemas/MmlCommandDto"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MmlDataDto"
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MmlDataDto"
            }
          },
          "executionStatus": {
            "type": "string",
            "example": "SUCCESS"
          },
          "timestamp": {
            "type": "integer",
            "example": 1758099705518
          }
        }
      }
    }
  },
  "paths": {
    "/user-management/v1/user-account/login": {
      "post": {
        "summary": "Generate User Authentication Token",
        "description": "This API generates an authentication token for a user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated user (returns token and user details)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (invalid or missing request parameters)"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ews-nvidia-network-management/v1/frontend/topology": {
      "post": {
        "summary": "Query Topology Cell Information",
        "description": "Obtain the list of cells in the current topology on the OSS.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopologyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Topology cell information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopologyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ews-nvidia-network-management/v1/frontend/tasks/create": {
      "post": {
        "summary": "Create MML Script Task (upload file)",
        "description": "Create a script task based on the uploaded MML script file and the specified task name.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "taskName": {
                    "type": "string",
                    "example": "Test"
                  },
                  "secretKey": {
                    "type": "string",
                    "example": "someSecretKey"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ews-nvidia-network-management/v1/frontend/tasks/{taskId}/status": {
      "get": {
        "summary": "Get Task Status by Task ID",
        "description": "Query the task status based on the returned task ID after an MML task is created.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Task identifier",
            "example": "101363"
          }
        ],
        "responses": {
          "200": {
            "description": "Task status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ews-nvidia-network-management/v1/frontend/tasks/{taskId}/download": {
      "get": {
        "summary": "Download Task Execution Result by Task ID",
        "description": "Download the result file of a task when the task is complete.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "101363"
          }
        ],
        "responses": {
          "200": {
            "description": "Output stream file successfully generated (binary)",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ews-nvidia-network-management/v1/frontend/tasks/{taskId}/delete": {
      "delete": {
        "summary": "Delete Task by Task ID",
        "description": "Delete the task after the task result is downloaded.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "101363"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ews-nvidia-network-management/v1/frontend/mml/execute": {
      "post": {
        "summary": "Execute MML Command",
        "description": "Issue an MML command to one or more specified NEs.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MmlExecuteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "MML command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MmlExecuteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}